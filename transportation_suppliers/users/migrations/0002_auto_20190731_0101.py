# Generated by Django 2.2.3 on 2019-07-31 01:01

import django.core.validators
from django.db import migrations, models
import transportation_suppliers.users.utils


class Migration(migrations.Migration):

    dependencies = [("users", "0001_initial")]

    operations = [
        migrations.CreateModel(
            name="Address",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "address1",
                    models.CharField(
                        help_text="Input address location.",
                        max_length=255,
                        verbose_name="address1",
                    ),
                ),
                (
                    "address2",
                    models.CharField(
                        blank=True,
                        help_text="Input address location if another exists here.",
                        max_length=255,
                        verbose_name="address2",
                    ),
                ),
                (
                    "area",
                    models.CharField(
                        blank=True,
                        help_text="Input area.",
                        max_length=255,
                        verbose_name="area",
                    ),
                ),
                (
                    "city",
                    models.CharField(
                        help_text="Input city.",
                        max_length=255,
                        verbose_name="city",
                    ),
                ),
                (
                    "county",
                    models.CharField(
                        blank=True,
                        help_text="Input county.",
                        max_length=255,
                        verbose_name="county",
                    ),
                ),
                (
                    "postcode",
                    models.CharField(
                        blank=True,
                        help_text="Input postcode.",
                        max_length=255,
                        verbose_name="postcode",
                    ),
                ),
                (
                    "country",
                    models.CharField(
                        blank=True,
                        help_text="Input country.",
                        max_length=255,
                        verbose_name="country",
                    ),
                ),
            ],
            options={
                "verbose_name": "address",
                "verbose_name_plural": "addresses",
            },
        ),
        migrations.AddField(
            model_name="user",
            name="avatar",
            field=models.ImageField(
                blank=True,
                help_text="Upload user avatar here.",
                upload_to=transportation_suppliers.users.utils.user_avatar_path,
                verbose_name="avatar",
            ),
        ),
        migrations.AddField(
            model_name="user",
            name="bio",
            field=models.CharField(
                blank=True,
                help_text="Enter user description here (Min 500 characters).",
                max_length=500,
                verbose_name="bio",
            ),
        ),
        migrations.AddField(
            model_name="user",
            name="date_of_birth",
            field=models.DateField(
                blank=True,
                help_text="Enter date of birth here.",
                null=True,
                verbose_name="date of birth",
            ),
        ),
        migrations.AddField(
            model_name="user",
            name="gender",
            field=models.CharField(
                blank=True,
                choices=[
                    ("male", "Male"),
                    ("female", "Female"),
                    ("other", "Other"),
                ],
                help_text="Enter gender of user here.",
                max_length=10,
                verbose_name="gender",
            ),
        ),
        migrations.AddField(
            model_name="user",
            name="mobile",
            field=models.CharField(
                blank=True,
                help_text="Enter mobile phone details here.",
                max_length=12,
                null=True,
                validators=[
                    django.core.validators.RegexValidator(
                        message="Phone Number must be entered in the format: '9999999999' or '999-999-9999'.",
                        regex="(\\d{3})\\D*(\\d{4}|\\d{3})\\D*(\\d{4}|\\d{3})$",
                    )
                ],
                verbose_name="mobile phone number",
            ),
        ),
        migrations.AddField(
            model_name="user",
            name="phone_home",
            field=models.CharField(
                blank=True,
                help_text="Enter home phone details here.",
                max_length=12,
                null=True,
                validators=[
                    django.core.validators.RegexValidator(
                        message="Phone Number must be entered in the format: '9999999999' or '999-999-9999'.",
                        regex="(\\d{3})\\D*(\\d{4}|\\d{3})\\D*(\\d{4}|\\d{3})$",
                    )
                ],
                verbose_name="home phone",
            ),
        ),
        migrations.AddField(
            model_name="user",
            name="phone_work",
            field=models.CharField(
                blank=True,
                help_text="Enter work phone details here.",
                max_length=12,
                null=True,
                validators=[
                    django.core.validators.RegexValidator(
                        message="Phone Number must be entered in the format: '9999999999' or '999-999-9999'.",
                        regex="(\\d{3})\\D*(\\d{4}|\\d{3})\\D*(\\d{4}|\\d{3})$",
                    )
                ],
                verbose_name="work phone",
            ),
        ),
        migrations.AddField(
            model_name="user",
            name="salutation",
            field=models.CharField(
                blank=True,
                choices=[
                    ("mr", "MR"),
                    ("mrs", "MRS"),
                    ("miss", "MISS"),
                    ("dr", "DR"),
                    ("prof", "PROF"),
                ],
                help_text="Enter user title here.",
                max_length=10,
                verbose_name="salutation",
            ),
        ),
        migrations.AlterField(
            model_name="user",
            name="name",
            field=models.CharField(
                blank=True,
                help_text="Enter full name of user.",
                max_length=255,
                verbose_name="Name of User",
            ),
        ),
        migrations.AddField(
            model_name="user",
            name="addresses",
            field=models.ManyToManyField(
                help_text="Select addresses of the user.",
                related_name="address_users",
                to="users.Address",
                verbose_name="addresses",
            ),
        ),
    ]
